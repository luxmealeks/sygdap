<?php

namespace App\Http\Controllers;

use App\Piece;
use Illuminate\Http\Request;
use Yajra\Datatables\Datatables;

class PieceController extends Controller
{
    public function list(Request $request)
    {
        $piece = Piece::all();

        // $prestataire = Prestataire::get();
        return Datatables::of($piece)->make(true);
    }

    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
        return view('pieces.piece_upload');
    }

    /* public function action(Request $request)
    {
        $validation = Validator::make($request->all(), [
      'select_file' => 'required|image|mimes:jpeg,png,jpg,gif|max:2048',
     ]);
        if ($validation->passes()) {
            $image = $request->file('select_file');
            $new_name = rand().'.'.$image->getClientOriginalExtension();
            $image->move(public_path('images'), $new_name);

            return response()->json([
       'message' => 'Image Upload Successfully',
       'uploaded_image' => '<img src="/images/'.$new_name.'" class="img-thumbnail" width="300" />',
       'class_name' => 'alert-success',
      ]);
        } else {
            return response()->json([
       'message' => $validation->errors()->all(),
       'uploaded_image' => '',
       'class_name' => 'alert-danger',
      ]);
        }
    } */

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create(Request $request)
    {
        $prestataires_id = $request->input('prestataire'); //on recupere le prestataire
        $prestataire = \App\Type::find($prestataires_id);

        return view('pieces.piece_upload', compact('prestataire'));
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param \Illuminate\Http\Request $request
     *
     * @return \Illuminate\Http\Response
     */
    public function store(Request $request)
    {
        $validation = Validator::make($request->all(), [
      'nompiece' => 'required|image|mimes:jpeg,png,jpg,gif|max:2048',
     ]);
        if ($validation->passes()) {
            $piece = $request->file('select_file');
            $new_name = rand().'.'.$piece->getClientOriginalExtension();
            $piece->move(public_path('images'), $new_name);

            return response()->json([
       'message' => 'Pièce chargée avec succés!',
       'nompiece' => '<img src="/images/'.$new_name.'" class="img-thumbnail" width="300" />',
       'class_name' => 'alert-success',
      ]);
        } else {
            return response()->json([
       'message' => $validation->errors()->all(),
       'nompiece' => '',
       'class_name' => 'alert-danger',
      ]);
        }
    }

    /**
     * Display the specified resource.
     *
     * @param int $id
     *
     * @return \Illuminate\Http\Response
     */
    public function show(Piece $piece)
    {
        echo 'Piece :'.$piece->nompiece.'<br>';
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param int $id
     *
     * @return \Illuminate\Http\Response
     */
    public function edit($id)
    {
    }

    /**
     * Update the specified resource in storage.
     *
     * @param \Illuminate\Http\Request $request
     * @param int                      $id
     *
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request, $id)
    {
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param int $id
     *
     * @return \Illuminate\Http\Response
     */
    public function destroy($id)
    {
    }
}

/* <?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use Validator;

class AjaxUploadController extends Controller
{
    function index()
    {
     return view('ajax_upload');
    }

    function action(Request $request)
    {
     $validation = Validator::make($request->all(), [
      'select_file' => 'required|image|mimes:jpeg,png,jpg,gif|max:2048'
     ]);
     if($validation->passes())
     {
      $image = $request->file('select_file');
      $new_name = rand() . '.' . $image->getClientOriginalExtension();
      $image->move(public_path('images'), $new_name);
      return response()->json([
       'message'   => 'Image Upload Successfully',
       'uploaded_image' => '<img src="/images/'.$new_name.'" class="img-thumbnail" width="300" />',
       'class_name'  => 'alert-success'
      ]);
     }
     else
     {
      return response()->json([
       'message'   => $validation->errors()->all(),
       'uploaded_image' => '',
       'class_name'  => 'alert-danger'
      ]);
     }
    }
}
?> */
